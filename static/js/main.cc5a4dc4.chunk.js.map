{"version":3,"sources":["components/TheCard.js","components/Card.js","components/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["TheCard","props","className","src","monster","id","alt","name","email","Card","monsters","map","SearchBox","placeholder","changeHandler","type","onChange","App","handleChange","e","setState","search","target","value","state","fetch","then","res","json","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,kBAAU,SAAAC,GACrB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAI,KACnE,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCJXC,EAAO,SAAAR,GAClB,OACE,qBAAKC,UAAU,OAAf,SACGD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACzB,8BACE,cAAC,EAAD,CAASA,QAASA,KADVA,EAAQC,UCLbO,G,MAAY,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cACvC,OACE,uBACEZ,UAAU,aACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCDG,E,kDAtCb,aAAe,IAAD,8BACZ,gBAcFC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEC,OAAQF,EAAEG,OAAOC,SAbjC,EAAKC,MAAQ,CACXd,SAAU,GACVW,OAAQ,IALE,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAI,EAAKR,SAAS,CAAEV,SAAUkB,S,+BAOlC,IAAD,EACsBC,KAAKL,MAA1Bd,EADD,EACCA,SAAUW,EADX,EACWA,OACZS,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQG,KAAKyB,cAAcC,SAASZ,EAAOW,kBAE7C,OACE,qBAAK9B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,CACEW,YAAY,sBACZC,cAAee,KAAKX,eAEtB,cAAC,EAAD,CAAMR,SAAUoB,a,GAhCRI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cc5a4dc4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TheCard.css';\r\n\r\nexport const TheCard = props => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img src={`https://robohash.org/${props.monster.id}?set=set2`} alt=\"\" />\r\n      <h1>{props.monster.name}</h1>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './Card.css';\r\nimport { TheCard } from './TheCard';\r\n\r\nexport const Card = props => {\r\n  return (\r\n    <div className=\"card\">\r\n      {props.monsters.map(monster => (\r\n        <div key={monster.id}>\r\n          <TheCard monster={monster} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nexport const SearchBox = ({ placeholder, changeHandler }) => {\r\n  return (\r\n    <input\r\n      className=\"search-box\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={changeHandler}\r\n    />\r\n  );\r\n};\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Card } from './components/Card';\nimport { SearchBox } from './components/SearchBox';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      search: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(json => this.setState({ monsters: json }));\n  }\n\n  handleChange = e => {\n    this.setState({ search: e.target.value });\n  };\n\n  render() {\n    const { monsters, search } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(search.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <SearchBox\n            placeholder=\"Search for Monster!\"\n            changeHandler={this.handleChange}\n          />\n          <Card monsters={filteredMonsters} />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}